name: Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install flake8
        run: |
          pip install flake8
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --show-source --statistics
          flake8 . --count --exit-zero --statistics
  Format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install black and isort
        run: |
          pip install isort==5.6.4
          pip install black==20.8b1
          # Needs to be pinned for black to work
          pip install click==8.0.3
      - name: Check format with black and isort
        run: |
          black --check --config black.toml .
          isort --check-only .
  Vulnerabilities-and-Safety:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-python-env
      - name: Install safety and bandit
        run: |
          pip install safety
          pip install bandit
      - name: Check safety
        run: |
          bandit -a vuln --exclude "tests" -r .
          safety check --full-report
  Unit-Tests-and-SonarCloud:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:11-2.5
        env:
          POSTGRES_USER: tvp
          POSTGRES_PASSWORD: tvp
          POSTGRES_DB: tvp
          DEBUG: true
          SECRET_KEY: build_secret
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-python-env
      - name: Run pytest with coverage
        run: |
          pytest --cov=./ --cov-report=xml --cov-branch
        env:
          DATABASE_URL: postgis://tvp:tvp@localhost/tvp
          DEBUG: true
          SECRET_KEY: build_secret
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      # Without this workaround Sonar reports a warning about an incorrect source path; credits to linked-events
      - name: Override coverage report source path for Sonar
        run: sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace/@g' coverage.xml
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
