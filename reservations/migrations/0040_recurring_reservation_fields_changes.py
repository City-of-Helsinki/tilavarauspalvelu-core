# Generated by Django 3.2.16 on 2022-12-12 08:41

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone

def set_reservation_units(apps, schema_editor):
    RecurringReservation = apps.get_model("reservations", "RecurringReservation")

    for recurring in RecurringReservation.objects.filter(reservation_unit__isnull=True):
        reservation = recurring.reservations.first()
        if reservation:
            recurring.reservation_unit = reservation.reservation_unit.first()
            recurring.save()
        else:
            recurring.delete()

def update_created(apps, schema_editor):
    RecurringReservation = apps.get_model("reservations", "RecurringReservation")

    for recurring in RecurringReservation.objects.filter(reservation_unit__isnull=True):
        reservation = recurring.reservations.first()
        if reservation and reservation.created_at:
            recurring.created = reservation.created_at
            recurring.save()


class Migration(migrations.Migration):

    dependencies = [
        ('reservation_units', '0082_reservationunit_payment_accounting'),
        ('applications', '0062_applicationevent_flagged'),
        ('reservations', '0039_remove_reservationstatistic_staff_event'),
    ]

    operations = [
        migrations.AddField(
            model_name='recurringreservation',
            name='begin_date',
            field=models.DateField(null=True, verbose_name='Begin date'),
        ),
        migrations.AddField(
            model_name='recurringreservation',
            name='begin_time',
            field=models.TimeField(null=True, verbose_name='Begin time'),
        ),
        migrations.AddField(
            model_name='recurringreservation',
            name='created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='recurringreservation',
            name='end_date',
            field=models.DateField(null=True, verbose_name='End date'),
        ),
        migrations.AddField(
            model_name='recurringreservation',
            name='end_time',
            field=models.TimeField(null=True, verbose_name='End time'),
        ),
        migrations.AddField(
            model_name='recurringreservation',
            name='interval',
            field=models.PositiveIntegerField(null=True),
        ),
        migrations.AddField(
            model_name='recurringreservation',
            name='name',
            field=models.CharField(blank=True, default='', max_length=255),
        ),
        migrations.AddField(
            model_name='recurringreservation',
            name='reservation_unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='reservation_units.reservationunit', verbose_name='Reservation unit'),
            preserve_default=False,
        ),
        migrations.RunPython(set_reservation_units, migrations.RunPython.noop),
        migrations.AlterField(
            model_name='recurringreservation',
            name='reservation_unit',
            field=models.ForeignKey(
                null=False, on_delete=django.db.models.deletion.PROTECT,
                to='reservation_units.reservationunit', verbose_name='Reservation unit'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='recurringreservation',
            name='weekdays',
            field=models.CharField(blank=True, choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], default='', max_length=16),
        ),
        migrations.AlterField(
            model_name='recurringreservation',
            name='application',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='recurring_reservation', to='applications.application', verbose_name='Application'),
        ),
        migrations.AlterField(
            model_name='recurringreservation',
            name='application_event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='recurring_reservation', to='applications.applicationevent', verbose_name='Application event'),
        ),
        migrations.RunPython(update_created, migrations.RunPython.noop),
    ]
