# Generated by Django 3.2.15 on 2022-09-15 06:47

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('applications', '0062_applicationevent_flagged'),
        ('reservation_units', '0071_remove_reservationunit_reservation_purposes'),
        ('reservations', '0031_reservation_reservee_language'),
    ]

    operations = [
        migrations.CreateModel(
            name='ReservationStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation_created_at', models.DateTimeField(default=django.utils.timezone.now, null=True, verbose_name='Created at')),
                ('reservation_handled_at', models.DateTimeField(blank=True, help_text='When this reservation was handled.', null=True, verbose_name='Handled at')),
                ('reservation_confirmed_at', models.DateTimeField(null=True, verbose_name='Confirmed at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Statistics updated at')),
                ('reservee_type', models.CharField(blank=True, choices=[('business', 'Business'), ('nonprofit', 'Nonprofit'), ('individual', 'Individual')], help_text='Type of reservee', max_length=50, null=True)),
                ('applying_for_free_of_charge', models.BooleanField(blank=True, default=False, verbose_name='Reservee is applying for a free-of-charge reservation')),
                ('reservee_language', models.CharField(blank=True, default='', max_length=255, verbose_name='Preferred language of reservee')),
                ('num_persons', models.PositiveIntegerField(blank=True, null=True, verbose_name='Number of persons')),
                ('priority', models.IntegerField(choices=[(100, 'Low'), (200, 'Medium'), (300, 'High')], default=200)),
                ('age_group_min', models.PositiveIntegerField(null=True, verbose_name='Minimum')),
                ('age_group_max', models.PositiveIntegerField(blank=True, null=True, verbose_name='Maximum')),
                ('is_applied', models.BooleanField(blank=True, default=False, verbose_name='Is the reservation done through application process.')),
                ('ability_group_name', models.TextField(verbose_name='Name')),
                ('begin', models.DateTimeField(verbose_name='Begin time')),
                ('end', models.DateTimeField(verbose_name='End time')),
                ('duration_minutes', models.IntegerField(verbose_name='Reservation duration in minutes')),
                ('staff_event', models.BooleanField(default=False, help_text='Indicates if reservation is internal or created by staff', null=True, verbose_name='Reservation is internal')),
                ('reservation_type', models.CharField(help_text='Type of reservation', max_length=50, null=True)),
                ('state', models.CharField(max_length=32, verbose_name='State')),
                ('cancel_reason_text', models.CharField(max_length=255, verbose_name='The reason text of the cancel reason')),
                ('deny_reason_text', models.CharField(max_length=255, verbose_name='The reason text of the deny reason')),
                ('price', models.DecimalField(decimal_places=2, default=0, help_text='The price of this particular reservation', max_digits=10, verbose_name='Price')),
                ('tax_percentage_value', models.DecimalField(decimal_places=2, default=0, help_text='The value of the tax percentage for this particular reservation', max_digits=5, verbose_name='Tax percentage value')),
                ('primary_reservation_unit_name', models.CharField(max_length=255, verbose_name='Name')),
                ('primary_unit_tprek_id', models.CharField(max_length=255, null=True, verbose_name='TPREK id')),
                ('primary_unit_name', models.CharField(max_length=255, verbose_name='Name')),
                ('ability_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reservations.abilitygroup', verbose_name='Ability group')),
                ('age_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reservations.agegroup', verbose_name='Age group')),
                ('cancel_reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservation_statistics', to='reservations.reservationcancelreason', verbose_name='Reason for cancellation')),
                ('deny_reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservation_statistics', to='reservations.reservationdenyreason', verbose_name='Reason for deny')),
                ('home_city', models.ForeignKey(blank=True, help_text='Home city of the group or association', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservation_statistics', to='applications.city', verbose_name='Home city')),
                ('primary_reservation_unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='reservation_units.reservationunit')),
                ('purpose', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reservations.reservationpurpose', verbose_name='Reservation purpose')),
                ('reservation', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='reservations.reservation')),
            ],
        ),
        migrations.CreateModel(
            name='ReservationStatisticsReservationUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_tprek_id', models.CharField(max_length=255, null=True, verbose_name='TPREK id')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('unit_name', models.CharField(max_length=255, verbose_name='Name')),
                ('reservation_statistics', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservation_stats_reservation_units', to='reservations.reservationstatistic')),
                ('reservation_unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='reservation_units.reservationunit')),
            ],
        ),
    ]
