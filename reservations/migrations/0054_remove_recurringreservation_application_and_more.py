# Generated by Django 4.2.6 on 2023-10-26 05:57

import django.db.models.deletion
from django.db import migrations, models


def add_first_event_schedule(apps, schema_editor):
    RecurringReservation = apps.get_model("reservations", "RecurringReservation")
    for recurring in RecurringReservation.objects.all():
        needs_schedule = True

        # Look from the linked application event, use the first schedule found
        if needs_schedule and recurring.application_event is not None:
            for schedule in recurring.application_event.application_event_schedules.all():
                recurring.application_event_schedule = schedule
                needs_schedule = False
                break

        # Look from the linked application, use the first schedule found
        if needs_schedule and recurring.application is not None:
            for event in recurring.application.application_events.all():
                if not needs_schedule:
                    break

                for schedule in event.application_event_schedules.all():
                    recurring.application_event_schedule = schedule
                    needs_schedule = False
                    break

        # Schedule was filled -> Should save
        if not needs_schedule:
            recurring.save()


class Migration(migrations.Migration):
    dependencies = [
        ("applications", "0067_remove_applicationevent_declined_reservation_units"),
        ("reservations", "0053_alter_recurringreservation_options_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="recurringreservation",
            name="application_event_schedule",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="recurring_reservations",
                to="applications.ApplicationEventSchedule",
            ),
        ),
        migrations.RunPython(add_first_event_schedule, migrations.RunPython.noop),
        migrations.RemoveField(
            model_name="recurringreservation",
            name="application",
        ),
        migrations.RemoveField(
            model_name="recurringreservation",
            name="application_event",
        ),
    ]
