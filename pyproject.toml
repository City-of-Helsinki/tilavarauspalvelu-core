[tool.poetry]
name = "Tilavarauspalvelu"
version = "0"
description = ""
authors = []
classifiers = [
    # This prevents accidentally running 'poetry publish'
    "Private :: Do Not Upload",
]

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
celery = "^5.3"
certifi = "^2023.7.22"
cryptography = ">=41.0.3"
Django = "^4.2"
django-admin-extra-buttons = "^1.5.6"
django-admin-rangefilter = "^0.10.0"
django-admin-sortable2 = "^2.1.9"
django-auditlog = "^2.3.0"
django-celery-beat = "^2.5.0"
django-celery-results = "^2.5.1"
django-cors-headers = "^4.2.0"
django-enumfields2 = "^3.0.2"
django-environ = "^0.10.0"
django-extensions = "^3.2.3"
django-extra-fields = "^3.0.2"
django-filter = "^23.2"
django-graphql-jwt = "^0.4.0"
django-helusers = "^0.9.0"
django-import-export = "^3.2.0"
django-modeltranslation = "^0.18.11"
django-mptt = "^0.14.0"
django-prometheus = "^2.3.1"
django-recurrence = "^1.11.1"
django-redis = "^5.3.0"
django-tinymce = "^3.6.1"
djangorestframework = "^3.14.0"
drf-oidc-auth = "^3.0.0"
drf-spectacular = "^0.26.4"
easy-thumbnails = "^2.8.5"
elasticsearch-django = "^8.4"
graphene-django = "^3.1.5"
graphene-file-upload = "^1.3.0"
graphene-permissions = "^1.1.4"
helsinki-profile-gdpr-api = "^0.2.0"
hiredis = "^2.2.3"
icalendar = "^5.0.7"
jinja2 = "^3.1.2"
ortools = "^9.7.2996"
psycopg2 = "^2.9.7"
pyyaml = "^6.0.1"
redis = "^5.0.0"
sentry-sdk = "^1.29.2"
social-auth-app-django = "^5.2.0"
whitenoise = "^6.5.0"

[tool.poetry.dependencies.uWSGI]
version = "^2.0.22"
# Skip installation on Windows as uWSGI does not support it without Cygwin.
# Windows users should use WSL for their local development virtualenv, but can
# still create another virtualenv in Windows without uWSGI for pre-commit hooks.
markers = "sys_platform != 'win32'"

[tool.poetry.group.test.dependencies]
assertpy = "^1.1"
freezegun = "^1.2.2"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-django = "^4.5.2"
pytest-xdist = "^3.3.1"
pytest-factoryboy = "^2.5.1"
requests-mock = "^1.11.0"
snapshottest = "^0.6.0"
faker = "^19.3.0"
django-graphiql-debug-toolbar = "^0.2.0"

[tool.poetry.group.lint.dependencies]
pre-commit = "^3.3.3"

[tool.ruff]
fix = true
line-length = 120
target-version = "py311"
extend-exclude = [
    "migrations",
    "tests",
    "venv",
    "build",
    "snapshots",
    "api/examples.py",
    "tilavarauspalvelu/settings.py",
    "local_settings.py",
]
select = [
    "F",        # pyflakes
    "E",        # pycodestyle errors
    "W",        # pycodestyle warnings
    "I",        # isort
    "ISC",      # flake8-implicit-str-concat
    "S",        # flake8-bandit
    "C4",       # flake8-comprehensions
    "B",        # flake8-bugbear
    "T20",      # flake8-print
    "TID",      # flake8-tidy-imports
    "D200",     # pydocstyle: One-line docstring should fit on one line
    "D201",     # pydocstyle: No blank lines allowed before function docstring (found {num_lines})
    "D202",     # pydocstyle: No blank lines allowed after function docstring (found {num_lines})
    "D209",     # pydocstyle: Multi-line docstring closing quotes should be on a separate line
    "D213",     # pydocstyle: Multi-line docstring summary should start at the second line
    "UP004",    # pyupgrade: Class {name} inherits from object
    "UP006",    # pyupgrade: Use {to} instead of {from} for type annotation
    "UP007",    # pyupgrade: Use X | Y for type annotations
]
ignore = [
    "S101",  # assert is fine.
    "B904",  # bare raise is fine.
    "B905",  # zip without strict.
]

[tool.ruff.extend-per-file-ignores]
"common/management/commands/create_test_data.py" = [
    "S311",  # pseudo-random generators are fine here.
]
"common/management/commands/_utils.py" = [
    "S311",  # pseudo-random generators are fine here.
]

[tool.ruff.isort]
combine-as-imports = false
known-third-party = [
    "django",
]

[tool.ruff.mccabe]
max-complexity = 10

[tool.black]
line_length = 120
target-version = ["py311"]
force-exclude = '''
(
  .*/migrations/.*
  | .*/snapshots/.*
)
'''

[tool.bandit]
exclude_dirs = [
    "tests",
]
skips = [
    "B101",  # Assert is fine.
    "B311",  # Random is fine.
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tilavarauspalvelu.settings"
python_files = [
    "tests.py",
    "test_*.py",
    "*_tests.py",
]
norecursedirs = [
    ".git",
    "venv",
    "build",
]
filterwarnings = [
    "ignore:.*collections.*:DeprecationWarning:graphene",
    "ignore:.*ugettext_lazy.*::recurrence",
    "ignore:.*No directory at.*:UserWarning:whitenoise",
    "ignore:.*ugettext_lazy.*::auditlog",
    "ignore:.*smart_text.*::auditlog",
    "ignore:.*ugettext_lazy.*::jsonfield",
]

[tool.coverage.run]
source = [
    "allocation/",
    "api/",
    "applications/",
    "email_notification/",
    "merchants/",
    "opening_hours/",
    "permissions/",
    "reservation_units/",
    "reservations/",
    "resources/",
    "services/",
    "spaces/",
    "terms_of_use/",
    "tilavarauspalvelu/",
    "users/",
    "utils/",
]
omit = [
    "*migrations*",
    "*snapshots*",
    "*tests*",
]
