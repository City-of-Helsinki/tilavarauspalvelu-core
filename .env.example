# Tilavarauspalvelu environment configuration
# This is supposed to be used only in development, for Django to read it rename it to .env
# For production use, set environment variables using the facilities
# of your runtime environment.

# Whether to run Django in debug mode
# Django setting: DEBUG https://docs.djangoproject.com/en/3.0/ref/settings/#debug
DEBUG=True

# Level of Django logging. This variable only has effect if DEBUG=True. In that case,
# all events above the given level will be logged.
# Django setting: DJANGO_LOG_LEVEL https://docs.djangoproject.com/en/3.0/topics/logging/#examples
DJANGO_LOG_LEVEL=DEBUG

# Maximum age of Django db connection. The default Django setting closes the db connection after
# after each request, which may cause slowdown in case the db backend is slow to establish
# connections.
CONN_MAX_AGE=0

# Configures database for Tilavarauspalvelu using URL style. Format is:
# postgis://USER:PASSWORD@HOST:PORT/DBNAME
#DATABASE_URL=postgis://tvp:tvp@localhost/tvp

# Jwt token authentication, not yet in use. This settings Specifies
# the value that must be present in the "aud"-key of the token presented
# by a client when making an authenticated request. Tilavarauspalvelu uses this
# key for verifying that the token was meant for accessing this particular
# instance (the tokens are signed, see below).
#TOKEN_AUTH_ACCEPTED_AUDIENCE=string-identifying-this-tvp-instance

# This key will be used to verify the JWT token is from trusted
# Identity Provider. The provider must have signed
# the JWT TOKEN using this shared secret
# Note: Wre are not yet using token authentication
# Does not correspond to standard Django setting
#TOKEN_AUTH_SHARED_SECRET=abcdefghacbdefgabcdefghacbdefgabcdefghacbdefgabcdefghacbdefgabcdefghacbdefg

# Secret used for various functions within Django. This setting is
# mandatory for Django, but Tilavarauspalvelu will generate a key, if it is not
# defined here. Currently Tilavarauspalvelu does not use any functionality that
# needs this.
# Django setting: SECRET_KEY https://docs.djangoproject.com/en/3.0/ref/settings/#secret-key
#SECRET_KEY=

# List of Host-values, that Tilavarauspalvelu will accept in requests.
# https://docs.djangoproject.com/en/3.0/topics/security/#host-headers-virtual-hosting
# Specified as a comma separated list of allowed values. Note that this does
# NOT matter if you are running with DEBUG
# Django setting: ALLOWED_HOSTS https://docs.djangoproject.com/en/3.0/ref/settings/#allowed-hosts
#ALLOWED_HOSTS=example.address.com,another.address.com

# List of tuples (or just e-mail addresses) specifying Administrators of this
# Tilavarauspalvelu instance. Django uses this only when logging is configured to
# send exceptions to admins. Tilavarauspalvelu does not do this. Still you may want
# to set this for documentation
# Django setting: ADMINS https://docs.djangoproject.com/en/3.0/ref/settings/#admins
# ADMINS=admin@this-tvp.instance,another-admin@this-tvp.instance

# Cookie prefix is added to the every cookie set by Tilavarauspalvelu. These are
# mostly used when accessing the internal Django admin site. This applies
# to django session cookie and csrf cookie
# Django setting: prepended to CSRF_COOKIE_NAME and SESSION_COOKIE_NAME
COOKIE_PREFIX=tilavarauspalvelu

# Django INTERNAL_IPS setting allows some debugging aids for the addresses
# specified here
# DJango setting: INTERNAL_IPS https://docs.djangoproject.com/en/3.0/ref/settings/#internal-ips
INTERNAL_IPS=127.0.0.1

# Specifies a header that is trusted to indicate that the request was using
# https while traversing over the Internet at large. This is used when
# a proxy terminates the TLS connection and forwards the request over
# a secure network. Specified using a tuple.
# Django setting: SECURE_PROXY_SSL_HEADER https://docs.djangoproject.com/en/3.0/ref/settings/#secure-proxy-ssl-header
#SECURE_PROXY_SSL_HEADER=('HTTP_X_FORWARDED_PROTO', 'https')

# Media root is the place in file system where Django and, by extension
# Django stores "uploaded" files. This means any and all files
# that are inputted through importers or API, if such files are ever present.
# Django setting: MEDIA_ROOT https://docs.djangoproject.com/en/3.0/ref/settings/#media-root
#MEDIA_ROOT=/home/tilavarauspalvelu/media

# Static root is the place where Tilavarauspalvelu will install any static
# files that need to be served to clients. For Tilavarauspalvelu this is mostly
# JS and CSS for the API exploration interface + admin
# Django setting: STATIC_ROOT
#STATIC_ROOT=/home/tilavarauspalvelu/static

# Media URL is address (URL) where users can access files in MEDIA_ROOT
# through http. Ie. where your uploaded files are publicly accessible.
# In the simple case this is a relative URL to same server as API
# Django setting: MEDIA_URL https://docs.djangoproject.com/en/3.0/ref/settings/#media-url
MEDIA_URL=/media/

# Static URL is address (URL) where users can access files in STATIC_ROOT
# through http. Same factors apply as to MEDIA_URL
# Django setting: STATIC_URL https://docs.djangoproject.com/en/3.0/ref/settings/#static-url
STATIC_URL=/static/

# Specifies that Django is to use `X-Forwarded-Host` as it would normally
# use the `Host`-header. This is necessary when `Host`-header is used for
# routing the requests in a network of reverse proxies. `X-Forwarded-Host`
# is then used to carry the Host-header value supplied by the origin client.
# This affects how ALLOWED_HOSTS behaves, as well.
# Django setting: https://docs.djangoproject.com/en/3.0/ref/settings/#use-x-forwarded-host
# TRUST_X_FORWARDED_HOST=False

# SENTRY_DSN setting specifies the sentry URL where reports
# for this Tilavarauspalvelu instance should be sent. You can find this in
# your Sentry interface (or through its API)
#SENTRY_DSN=http://your.sentry.here/foo/bar

# Sentry environment is an optional tag that can be included in sentry
# reports. It is used to separate deployments within Sentry UI
SENTRY_ENVIRONMENT=local-development-unconfigured

# Mailgun API credentials
# If Tilavarauspalvelu incorporates the django notificator app https://github.com/City-of-Helsinki/django-ilmoitin,
# the following settings (or similar ones) may be needed.
#MAIL_MAILGUN_KEY=key
#MAIL_MAILGUN_DOMAIN=do.main.com
#MAIL_MAILGUN_API=https://mail.gun.api/

# The default value for Resource.timezone field
#RESOURCE_DEFAULT_TIMEZONE=Europe/Helsinki

# A list of origins that are authorized to make cross-site HTTP requests. Defaults to [].
# An Origin is defined by the CORS RFC Section 3.2 as a URI scheme + hostname + port,
# or one of the special values 'null' or 'file://'.
# Default ports (HTTPS = 443, HTTP = 80) are optional here.
#CORS_ALLOWED_ORIGINS=

# Boolean. Set true to enable audit logging.
# Logs are saved to database configured to be used by django.
#AUDIT_LOGGING_ENABLED=

# Temporary DEVELOPMENT ONLY environment variable that disables authentication.
# Do not set this in production environments.
# Set to true to bypass authentication.
# TMP_PERMISSIONS_DISABLED=False

# Used in development environments to control registering to redhat developer account.
# Set to local to indicate the docker isn't run in openshift/kubernetes environment.
# Do not set in production or openshift environments.
#BUILD_MODE=local

# Account name used in development environments to login to redhat developer subscription
# to gain access to some build tools needed to install lib gdal.
# Register at https://developers.redhat.com/register and confirm your email address to
# enable the account.
# BUILD_MODE needs to be set to local for this to have effect.
# Do not set in production or openshift/kubernetes environments.
#REDHAT_USERNAME=

# Password used in development environments to login to redhat developer subscription
# to gain access to some build tools needed to install lib gdal.
# BUILD_MODE needs to be set to local for this to have effect.
# Do not set in production or openshift/kubernetes environments.
#REDHAT_PASSWORD=

# Tunnistamo Authentication

# Client ID of tunnistamo client for API. By default https://api.hel.fi/auth/tilavarausapidev
#TUNNISTAMO_JWT_AUDIENCE

# Issuer of the JWT token. By default https://tunnistamo.test.hel.ninja/openid.
#TUNNISTAMO_JWT_ISSUER

#Tunnistamo client ID for Django Admin. By default tilanvaraus-django-admin-dev.
#TUNNISTAMO_ADMIN_KEY

#Secret for the same tunnistamo client for Django Admin. There is no default.
#Get this value from Tilavarauspalvelu backend developers for dev environments,
#for production environments get this from tunnistamo dev team
#TUNNISTAMO_ADMIN_SECRET

#OIDC endpoint of the SSO provider. By default https://tunnistamo.test.hel.ninja/openid.
#TUNNISTAMO_ADMIN_OIDC_ENDPOINT

#Number of uwsgi processes to run.
#Currently, uwsgi scales up workers depending on load. Check deploy/uwsgi.yml
#for exact configuration. Shortly, worker amount will remain at UWSGI_MIN_NUM_PROCESSES
#until application is under load. UWSGI scales up workers 2 at a time when workers are
#kept busy until UWSGI_MAX_NUM_PROCESSES is reached. If load reduces, UWSGI will scale
#down workers until UWSGI_MIN_NUM_PROCESSES at regular intervals.
#UWSGI_MAX_NUM_PROCESSES
#UWSGI_MIN_NUM_PROCESSES
#UWSGI_PROCESSES_STEP_COUNT
#UWSGI_NUM_OFFLOAD_THREADS

#When behind multi proxy setup like in current production, we need to rewrite headers to get correct
#when behing azure application gateway
#MULTI_PROXY_HEADERS

#Used to hash reservation unit uuid:s for ical links. Since those are not protected
#by anything so you can subscribe to them from calendars,
#we need to hash those, so you can't access those just by uuid
#ICAL_HASH_SECRET=


# CELERY

# Set true if you want to use celery to run backend tasks. Otherwise they will be run synchronously.
# Default is true
#CELERY_ENABLED=True

# What to use as celery result backend. Defaults to django db
# For options see https://docs.celeryproject.org/en/stable/userguide/configuration.html#std-setting-result_backend
#CELERY_RESULT_BACKEND=

# Only needed if using django db as result backend. Defaults to django-cache
#CELERY_CACHE_BACKEND=

# Timezone for celery. Defaults to Europe/Helsinki
#CELERY_TIMEZONE=

# Set true to track started tasks. If set to false, only pending, finished and waiting to be retried
# Tasks are reported. Useful if there are long running tasks, debugging or you need to report
# what tasks are currently running.
# Defaults to false
# CELERY_TASK_TRACK_STARTED=

# Time limit for celery tasks. Defaults to 5 minutes.
#CELERY_TASK_TIME_LIMIT=

# Broker url for celery.
# URL in the form of: transport://userid:password@hostname:port/virtual_host
# defaults to filesystem broker filesystem://
#CELERY_BROKER_URL=

# Celery filesystem backend
# Set true to use filesystem backend. If set to true the following environment variables must be set.
# If set to false, no need to set following celery variables.
# Defaults to true
#CELERY_FILESYSTEM_BACKEND=(bool, True),

# Folder to use for celery queue out. Defaults to ./broker/queue/
#CELERY_QUEUE_FOLDER_OUT=

# Folder to use for celery queue in. Defaults to ./broker/queue/
#CELERY_QUEUE_FOLDER_IN=

# Folder to use for storing processed tasks. Defaults to ./broker/processed/
#CELERY_PROCESSED_FOLDER=
# Url for hauki api
#HAUKI_API_URL

#Url for hauki admin ui
#HAUKI_ADMIN_UI_URL=

#Origin id used in hauki api to identify resources created by tilavaraus
#HAUKI_ORIGIN_ID=tvp

#Hauki secret key that is used to generate links to hauki admin ui.
#HAUKI_SECRET

# Organisation id in hauki that we can create resources under.
#HAUKI_ORGANISATION_ID

# API key used for City of Helsinki Verkkokauppa integration
#VERKKOKAUPPA_API_KEY=

# URL for the Verkkokauppa product experience API
#VERKKOKAUPPA_PRODUCT_API_URL=

# URL for the Verkkokauppa order experience API
#VERKKOKAUPPA_ORDER_API_URL=

# URL for the Verkkokauppa payment experience API
#VERKKOKAUPPA_PAYMENT_API_URL=

# Namespace for the Verkkokauppa merchants
VERKKOKAUPPA_MERCHANT_NAMESPACE=tilanvaraus

# Is reservation unit product mapping enabled (uses Celery and Verkkokauppa API)
# Defaults to false
#UPDATE_PRODUCT_MAPPING=
