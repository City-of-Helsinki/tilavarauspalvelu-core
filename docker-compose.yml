version: "3.9"

services:

  db:
    container_name: tvp-db
    image: "postgis/postgis:13-3.3-alpine"
    environment:
      POSTGRES_USER: tvp
      POSTGRES_PASSWORD: tvp
      POSTGRES_DB: tvp
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "tvp"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "127.0.0.1:5555:5432"
    volumes:
      - tvp-postgres:/var/lib/postgresql/data

  elastic:
    container_name: tvp-elastic
    image: "docker.elastic.co/elasticsearch/elasticsearch:8.8.0"
    environment:
      xpack.security.enabled: false
      discovery.type: single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "127.0.0.1:9200:9200"
    volumes:
      - tvp-elastic:/usr/share/elasticsearch/data

  redis:
    container_name: tvp-redis
    image: "redis:7-alpine"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "127.0.0.1:6379:6379"

  backend:
    container_name: tvp-core
    image: tvp-core
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        DEPS: main,test,lint
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      REDIS_URL: redis://redis:6379/0
      DATABASE_URL: postgis://tvp:tvp@db/tvp
      ELASTICSEARCH_URL: http://elastic:9200
      DJANGO_SETTINGS_ENVIRONMENT: Docker
    ports:
      - "127.0.0.1:8000:8000"
    entrypoint: /tvp/docker/entrypoint_dev.sh

volumes:
  tvp-postgres:
  tvp-elastic:
    driver: local

networks:
  default:
    name: helsinki
