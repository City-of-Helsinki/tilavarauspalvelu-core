query ReservationUnitPurposes($orderBy: [PurposeOrderingChoices]) {
  purposes(orderBy: $orderBy) {
    edges {
      node {
        id
        pk
        nameFi
        nameEn
        nameSv
        imageUrl
        smallUrl
      }
    }
  }
}

query ApplicationRecurringReservation($id: ID!) {
  recurringReservation(id: $id) {
    id
    allocatedTimeSlot {
      id
      reservationUnitOption {
        id
        applicationSection {
          id
          application {
            id
            pk
          }
        }
      }
    }
  }
}

query ReservationPage($id: ID!) {
  reservation(id: $id) {
    id
    pk
    applyingForFreeOfCharge
    calendarUrl
    paymentOrder {
      id
      reservationPk
      status
      paymentType
      receiptUrl
      checkoutUrl
    }
    recurringReservation {
      id
    }
    reservationUnits {
      id
      unit {
        id
        tprekId
        pk
        nameFi
        nameEn
        nameSv
        location {
          addressStreetEn
          addressStreetSv
          addressCityEn
          addressCitySv
          id
          addressStreetFi
          addressZip
          addressCityFi
        }
      }
      canApplyFreeOfCharge
      cancellationRule {
        id
        canBeCancelledTimeBefore
      }
      minPersons
      maxPersons
      metadataSet {
        id
        requiredFields {
          id
          fieldName
        }
        supportedFields {
          id
          fieldName
        }
      }
      termsOfUseFi
      termsOfUseEn
      termsOfUseSv
      serviceSpecificTerms {
        id
        textFi
        textEn
        textSv
      }
      cancellationTerms {
        id
        textFi
        textEn
        textSv
      }
      paymentTerms {
        id
        textFi
        textEn
        textSv
      }
      pricingTerms {
        id
        nameFi
        nameEn
        nameSv
        textFi
        textEn
        textSv
      }
      pk
      nameFi
      nameEn
      nameSv
      images {
        id
        imageUrl
        largeUrl
        mediumUrl
        smallUrl
        imageType
      }
      pricings {
        id
        begins
        priceUnit
        lowestPrice
        highestPrice
        taxPercentage {
          id
          pk
          value
        }
      }
      reservationBegins
      reservationEnds
      reservationPendingInstructionsFi
      reservationPendingInstructionsEn
      reservationPendingInstructionsSv
      reservationConfirmedInstructionsFi
      reservationConfirmedInstructionsEn
      reservationConfirmedInstructionsSv
      reservationCancelledInstructionsFi
      reservationCancelledInstructionsEn
      reservationCancelledInstructionsSv
    }
    reserveeFirstName
    reserveeLastName
    reserveeEmail
    reserveePhone
    reserveeType
    reserveeOrganisationName
    reserveeId
    reserveeIsUnregisteredAssociation
    reserveeAddressStreet
    reserveeAddressCity
    reserveeAddressZip
    billingFirstName
    billingLastName
    billingPhone
    billingEmail
    billingAddressStreet
    billingAddressCity
    billingAddressZip
    description
    purpose {
      id
      pk
      nameFi
      nameEn
      nameSv
    }
    ageGroup {
      id
      pk
      minimum
      maximum
    }
    numPersons
    taxPercentageValue
    state
    accessType
    pindoraInfo {
      accessCode
    }
    price
    begin
    end
  }
}

query ReservationEditPage($id: ID!) {
  reservation(id: $id) {
    id
    pk
    name
    isHandled
    reservationUnits {
      id
      cancellationRule {
        id
        canBeCancelledTimeBefore
      }
      minPersons
      maxPersons
      metadataSet {
        id
        requiredFields {
          id
          fieldName
        }
        supportedFields {
          id
          fieldName
        }
      }
      pk
      nameFi
      nameEn
      nameSv
      images {
        id
        imageUrl
        largeUrl
        mediumUrl
        smallUrl
        imageType
      }
      unit {
        id
        nameFi
        nameEn
        nameSv
      }
      pricings {
        id
        begins
        priceUnit
        lowestPrice
        highestPrice
        taxPercentage {
          id
          pk
          value
        }
      }
      reservationBegins
      reservationEnds
    }
    applyingForFreeOfCharge
    freeOfChargeReason
    description
    numPersons
    ageGroup {
      id
      pk
      maximum
      minimum
    }
    purpose {
      id
      pk
      nameFi
      nameEn
      nameSv
    }
    homeCity {
      id
      pk
      nameFi
      nameSv
      nameEn
    }
    reserveeFirstName
    reserveeLastName
    reserveeEmail
    reserveePhone
    reserveeType
    reserveeOrganisationName
    reserveeId
    reserveeIsUnregisteredAssociation
    reserveeAddressStreet
    reserveeAddressCity
    reserveeAddressZip
    billingFirstName
    billingLastName
    billingPhone
    billingEmail
    billingAddressStreet
    billingAddressCity
    billingAddressZip
    taxPercentageValue
    state
    accessType
    pindoraInfo {
      accessCode
    }
    price
    begin
    end
  }
}

query ReservationConfirmationPage($id: ID!) {
  reservation(id: $id) {
    id
    pk
    name
    calendarUrl
    paymentOrder {
      id
      reservationPk
      status
      paymentType
      receiptUrl
      checkoutUrl
    }
    reservationUnits {
      id
      canApplyFreeOfCharge
      cancellationRule {
        id
        canBeCancelledTimeBefore
      }
      pk
      nameFi
      nameEn
      nameSv
      images {
        id
        imageUrl
        largeUrl
        mediumUrl
        smallUrl
        imageType
      }
      unit {
        id
        nameFi
        nameEn
        nameSv
      }
      pricings {
        id
        begins
        priceUnit
        lowestPrice
        highestPrice
        taxPercentage {
          id
          pk
          value
        }
      }
      reservationBegins
      reservationEnds
      reservationPendingInstructionsFi
      reservationPendingInstructionsEn
      reservationPendingInstructionsSv
      reservationConfirmedInstructionsFi
      reservationConfirmedInstructionsEn
      reservationConfirmedInstructionsSv
      reservationCancelledInstructionsFi
      reservationCancelledInstructionsEn
      reservationCancelledInstructionsSv
    }
    reserveeFirstName
    reserveeLastName
    reserveeEmail
    reserveePhone
    reserveeType
    reserveeOrganisationName
    reserveeId
    reserveeIsUnregisteredAssociation
    reserveeAddressStreet
    reserveeAddressCity
    reserveeAddressZip
    billingFirstName
    billingLastName
    billingPhone
    billingEmail
    billingAddressStreet
    billingAddressCity
    billingAddressZip
    description
    purpose {
      id
      pk
      nameFi
      nameEn
      nameSv
    }
    ageGroup {
      id
      pk
      minimum
      maximum
    }
    numPersons
    taxPercentageValue
    state
    accessType
    pindoraInfo {
      accessCode
    }
    price
    begin
    end
    applyingForFreeOfCharge
  }
}

query ReservationCancelPage($id: ID!) {
  reservation(id: $id) {
    id
    name
    reservationUnits {
      id
      cancellationTerms {
        id
        textFi
        textEn
        textSv
      }
      cancellationRule {
        id
        canBeCancelledTimeBefore
      }
      pk
      nameFi
      nameEn
      nameSv
      images {
        id
        imageUrl
        largeUrl
        mediumUrl
        smallUrl
        imageType
      }
      unit {
        id
        nameFi
        nameEn
        nameSv
      }
      pricings {
        id
        begins
        priceUnit
        lowestPrice
        highestPrice
        taxPercentage {
          id
          pk
          value
        }
      }
      reservationBegins
      reservationEnds
    }
    recurringReservation {
      id
      name
      allocatedTimeSlot {
        id
        pk
        reservationUnitOption {
          id
          applicationSection {
            id
            application {
              id
              pk
              applicationRound {
                id
                termsOfUse {
                  id
                  textFi
                  textEn
                  textSv
                }
              }
            }
          }
        }
      }
    }
    pk
    taxPercentageValue
    state
    accessType
    pindoraInfo {
      accessCode
    }
    price
    begin
    end
    applyingForFreeOfCharge
  }
  reservationCancelReasons {
    edges {
      node {
        id
        pk
        reasonFi
        reasonEn
        reasonSv
      }
    }
  }
}

query Reservation($id: ID!) {
  reservation(id: $id) {
    id
    pk
    name
    bufferTimeBefore
    bufferTimeAfter
    calendarUrl
    paymentOrder {
      id
      reservationPk
      status
      paymentType
      receiptUrl
      checkoutUrl
    }
    reservationUnits {
      id
      canApplyFreeOfCharge
      requireReservationHandling
      cancellationRule {
        id
        canBeCancelledTimeBefore
      }
      minPersons
      maxPersons
      metadataSet {
        id
        requiredFields {
          id
          fieldName
        }
        supportedFields {
          id
          fieldName
        }
      }
      termsOfUseFi
      termsOfUseEn
      termsOfUseSv
      serviceSpecificTerms {
        id
        textFi
        textEn
        textSv
      }
      cancellationTerms {
        id
        textFi
        textEn
        textSv
      }
      paymentTerms {
        id
        textFi
        textEn
        textSv
      }
      pricingTerms {
        id
        nameFi
        nameEn
        nameSv
        textFi
        textEn
        textSv
      }
      pk
      nameFi
      nameEn
      nameSv
      images {
        id
        imageUrl
        largeUrl
        mediumUrl
        smallUrl
        imageType
      }
      unit {
        id
        nameFi
        nameEn
        nameSv
      }
      pricings {
        id
        begins
        priceUnit
        lowestPrice
        highestPrice
        taxPercentage {
          id
          pk
          value
        }
      }
      reservationBegins
      reservationEnds
    }
    applyingForFreeOfCharge
    freeOfChargeReason
    description
    numPersons
    ageGroup {
      id
      pk
      maximum
      minimum
    }
    purpose {
      id
      pk
      nameFi
      nameEn
      nameSv
    }
    homeCity {
      id
      pk
      nameFi
      nameSv
      nameEn
    }
    reserveeFirstName
    reserveeLastName
    reserveeEmail
    reserveePhone
    reserveeType
    reserveeOrganisationName
    reserveeId
    reserveeIsUnregisteredAssociation
    reserveeAddressStreet
    reserveeAddressCity
    reserveeAddressZip
    billingFirstName
    billingLastName
    billingPhone
    billingEmail
    billingAddressStreet
    billingAddressCity
    billingAddressZip
    taxPercentageValue
    state
    accessType
    pindoraInfo {
      accessCode
    }
    price
    begin
    end
  }
}

query ApplicationRoundsUi($orderBy: [ApplicationRoundOrderingChoices]) {
  applicationRounds(orderBy: $orderBy) {
    edges {
      node {
        publicDisplayBegin
        publicDisplayEnd
        criteriaFi
        criteriaEn
        criteriaSv
        notesWhenApplyingFi
        notesWhenApplyingEn
        notesWhenApplyingSv
        reservationUnits {
          id
          pk
          unit {
            id
            pk
          }
        }
        id
        pk
        nameFi
        nameEn
        nameSv
        reservationPeriodBegin
        reservationPeriodEnd
        applicationPeriodBegin
        applicationPeriodEnd
        status
      }
    }
  }
}

query ApplicationRound($id: ID!) {
  applicationRound(id: $id) {
    id
    pk
    nameFi
    nameEn
    nameSv
    reservationPeriodBegin
    reservationPeriodEnd
    reservationUnits {
      id
      pk
    }
  }
}

mutation CreateApplication($input: ApplicationCreateMutationInput!) {
  createApplication(input: $input) {
    pk
  }
}

query ApplicationRoundCriteria($id: ID!) {
  applicationRound(id: $id) {
    pk
    id
    nameFi
    nameEn
    nameSv
    criteriaFi
    criteriaEn
    criteriaSv
    notesWhenApplyingFi
    notesWhenApplyingEn
    notesWhenApplyingSv
  }
}

query Applications($user: Int!, $status: [ApplicationStatusChoice]!, $orderBy: [ApplicationOrderingChoices]!) {
  applications(user: $user, status: $status, orderBy: $orderBy) {
    edges {
      node {
        sentDate
        id
        pk
        status
        lastModifiedDate
        applicationRound {
          id
          nameFi
          nameEn
          nameSv
        }
        applicantType
        organisation {
          id
          nameFi
          organisationType
        }
        contactPerson {
          id
          lastName
          firstName
        }
      }
    }
  }
}

query ApplicationSentPage($id: ID!) {
  application(id: $id) {
    id
    pk
    status
  }
}

query ApplicationPagePreview($id: ID!) {
  application(id: $id) {
    applicationRound {
      id
      sentDate
      status
      termsOfUse {
        id
        pk
        termsType
        nameFi
        nameEn
        nameSv
        textFi
        textEn
        textSv
      }
      notesWhenApplyingFi
      notesWhenApplyingEn
      notesWhenApplyingSv
      reservationPeriodBegin
      reservationPeriodEnd
      pk
      nameFi
      nameSv
      nameEn
      reservationUnits {
        id
        pk
        nameFi
        nameSv
        nameEn
        minPersons
        maxPersons
        images {
          id
          imageUrl
          largeUrl
          mediumUrl
          smallUrl
          imageType
        }
        unit {
          id
          pk
          nameFi
          nameSv
          nameEn
        }
        accessTypes {
          id
          accessType
        }
      }
    }
    id
    pk
    status
    applicationSections {
      suitableTimeRanges {
        id
        pk
        beginTime
        endTime
        dayOfTheWeek
        priority
      }
      purpose {
        id
        pk
        nameFi
        nameSv
        nameEn
      }
      reservationUnitOptions {
        id
        reservationUnit {
          applicationRoundTimeSlots {
            id
            pk
            weekday
            closed
            reservableTimes {
              begin
              end
            }
          }
          id
          pk
          nameFi
          nameEn
          nameSv
          unit {
            id
            pk
            nameFi
            nameEn
            nameSv
          }
        }
        pk
        preferredOrder
      }
      id
      pk
      name
      status
      reservationMaxDuration
      ageGroup {
        id
        pk
        minimum
        maximum
      }
      numPersons
      reservationsEndDate
      reservationsBeginDate
      appliedReservationsPerWeek
      reservationMinDuration
    }
    applicantType
    contactPerson {
      id
      pk
      firstName
      lastName
      email
      phoneNumber
    }
    additionalInformation
    organisation {
      id
      pk
      nameFi
      identifier
      organisationType
      coreBusinessFi
      yearEstablished
      address {
        id
        pk
        postCode
        streetAddressFi
        cityFi
      }
    }
    homeCity {
      id
      pk
      nameFi
      nameEn
      nameSv
    }
    billingAddress {
      id
      pk
      postCode
      streetAddressFi
      cityFi
    }
  }
}

mutation SendApplication($input: ApplicationSendMutationInput!) {
  sendApplication(input: $input) {
    pk
  }
}

query ApplicationPage3($id: ID!) {
  application(id: $id) {
    id
    pk
    status
    applicationRound {
      id
      notesWhenApplyingFi
      notesWhenApplyingEn
      notesWhenApplyingSv
      reservationPeriodBegin
      reservationPeriodEnd
      pk
      nameFi
      nameSv
      nameEn
      reservationUnits {
        id
        pk
        nameFi
        nameSv
        nameEn
        minPersons
        maxPersons
        images {
          id
          imageUrl
          largeUrl
          mediumUrl
          smallUrl
          imageType
        }
        unit {
          id
          pk
          nameFi
          nameSv
          nameEn
        }
        accessTypes {
          id
          accessType
        }
      }
    }
    applicationSections {
      suitableTimeRanges {
        id
        pk
        beginTime
        endTime
        dayOfTheWeek
        priority
      }
      purpose {
        id
        pk
        nameFi
        nameSv
        nameEn
      }
      reservationUnitOptions {
        id
        reservationUnit {
          applicationRoundTimeSlots {
            id
            pk
            weekday
            closed
            reservableTimes {
              begin
              end
            }
          }
          id
          pk
          nameFi
          nameEn
          nameSv
          unit {
            id
            pk
            nameFi
            nameEn
            nameSv
          }
        }
        pk
        preferredOrder
      }
      id
      pk
      name
      status
      reservationMaxDuration
      ageGroup {
        id
        pk
        minimum
        maximum
      }
      numPersons
      reservationsEndDate
      reservationsBeginDate
      appliedReservationsPerWeek
      reservationMinDuration
    }
    applicantType
    contactPerson {
      id
      pk
      firstName
      lastName
      email
      phoneNumber
    }
    additionalInformation
    organisation {
      id
      pk
      nameFi
      identifier
      organisationType
      coreBusinessFi
      yearEstablished
      address {
        id
        pk
        postCode
        streetAddressFi
        cityFi
      }
    }
    homeCity {
      id
      pk
      nameFi
      nameEn
      nameSv
    }
    billingAddress {
      id
      pk
      postCode
      streetAddressFi
      cityFi
    }
  }
}

query ApplicationPage2($id: ID!) {
  application(id: $id) {
    id
    pk
    status
    applicationRound {
      id
      notesWhenApplyingFi
      notesWhenApplyingEn
      notesWhenApplyingSv
      reservationPeriodBegin
      reservationPeriodEnd
      pk
      nameFi
      nameSv
      nameEn
      reservationUnits {
        id
        pk
        nameFi
        nameSv
        nameEn
        minPersons
        maxPersons
        images {
          id
          imageUrl
          largeUrl
          mediumUrl
          smallUrl
          imageType
        }
        unit {
          id
          pk
          nameFi
          nameSv
          nameEn
        }
        accessTypes {
          id
          accessType
        }
      }
    }
    applicationSections {
      suitableTimeRanges {
        id
        pk
        beginTime
        endTime
        dayOfTheWeek
        priority
      }
      purpose {
        id
        pk
        nameFi
        nameSv
        nameEn
      }
      reservationUnitOptions {
        id
        reservationUnit {
          applicationRoundTimeSlots {
            id
            pk
            weekday
            closed
            reservableTimes {
              begin
              end
            }
          }
          id
          pk
          nameFi
          nameEn
          nameSv
          unit {
            id
            pk
            nameFi
            nameEn
            nameSv
          }
        }
        pk
        preferredOrder
      }
      id
      pk
      name
      status
      reservationMaxDuration
      ageGroup {
        id
        pk
        minimum
        maximum
      }
      numPersons
      reservationsEndDate
      reservationsBeginDate
      appliedReservationsPerWeek
      reservationMinDuration
    }
    applicantType
    contactPerson {
      id
      pk
      firstName
      lastName
      email
      phoneNumber
    }
    additionalInformation
    organisation {
      id
      pk
      nameFi
      identifier
      organisationType
      coreBusinessFi
      yearEstablished
      address {
        id
        pk
        postCode
        streetAddressFi
        cityFi
      }
    }
    homeCity {
      id
      pk
      nameFi
      nameEn
      nameSv
    }
    billingAddress {
      id
      pk
      postCode
      streetAddressFi
      cityFi
    }
  }
}

query ApplicationPage1($id: ID!) {
  application(id: $id) {
    id
    pk
    status
    applicationRound {
      id
      notesWhenApplyingFi
      notesWhenApplyingEn
      notesWhenApplyingSv
      reservationPeriodBegin
      reservationPeriodEnd
      pk
      nameFi
      nameSv
      nameEn
      reservationUnits {
        id
        pk
        nameFi
        nameSv
        nameEn
        minPersons
        maxPersons
        images {
          id
          imageUrl
          largeUrl
          mediumUrl
          smallUrl
          imageType
        }
        unit {
          id
          pk
          nameFi
          nameSv
          nameEn
        }
        accessTypes {
          id
          accessType
        }
      }
    }
    applicationSections {
      suitableTimeRanges {
        id
        pk
        beginTime
        endTime
        dayOfTheWeek
        priority
      }
      purpose {
        id
        pk
        nameFi
        nameSv
        nameEn
      }
      reservationUnitOptions {
        id
        reservationUnit {
          applicationRoundTimeSlots {
            id
            pk
            weekday
            closed
            reservableTimes {
              begin
              end
            }
          }
          id
          pk
          nameFi
          nameEn
          nameSv
          unit {
            id
            pk
            nameFi
            nameEn
            nameSv
          }
        }
        pk
        preferredOrder
      }
      id
      pk
      name
      status
      reservationMaxDuration
      ageGroup {
        id
        pk
        minimum
        maximum
      }
      numPersons
      reservationsEndDate
      reservationsBeginDate
      appliedReservationsPerWeek
      reservationMinDuration
    }
    applicantType
    contactPerson {
      id
      pk
      firstName
      lastName
      email
      phoneNumber
    }
    additionalInformation
    organisation {
      id
      pk
      nameFi
      identifier
      organisationType
      coreBusinessFi
      yearEstablished
      address {
        id
        pk
        postCode
        streetAddressFi
        cityFi
      }
    }
    homeCity {
      id
      pk
      nameFi
      nameEn
      nameSv
    }
    billingAddress {
      id
      pk
      postCode
      streetAddressFi
      cityFi
    }
  }
}

query ApplicationView($id: ID!) {
  application(id: $id) {
    applicationSections {
      id
      hasReservations
      suitableTimeRanges {
        id
        pk
        beginTime
        endTime
        dayOfTheWeek
        priority
      }
      purpose {
        id
        pk
        nameFi
        nameSv
        nameEn
      }
      reservationUnitOptions {
        id
        reservationUnit {
          applicationRoundTimeSlots {
            id
            pk
            weekday
            closed
            reservableTimes {
              begin
              end
            }
          }
          id
          pk
          nameFi
          nameEn
          nameSv
          unit {
            id
            pk
            nameFi
            nameEn
            nameSv
          }
        }
        pk
        preferredOrder
      }
      pk
      name
      status
      reservationMaxDuration
      ageGroup {
        id
        pk
        minimum
        maximum
      }
      numPersons
      reservationsEndDate
      reservationsBeginDate
      appliedReservationsPerWeek
      reservationMinDuration
    }
    applicationRound {
      id
      sentDate
      status
      termsOfUse {
        id
        pk
        termsType
        nameFi
        nameEn
        nameSv
        textFi
        textEn
        textSv
      }
      notesWhenApplyingFi
      notesWhenApplyingEn
      notesWhenApplyingSv
      reservationPeriodBegin
      reservationPeriodEnd
      pk
      nameFi
      nameSv
      nameEn
      reservationUnits {
        id
        pk
        nameFi
        nameSv
        nameEn
        minPersons
        maxPersons
        images {
          id
          imageUrl
          largeUrl
          mediumUrl
          smallUrl
          imageType
        }
        unit {
          id
          pk
          nameFi
          nameSv
          nameEn
        }
        accessTypes {
          id
          accessType
        }
      }
    }
    id
    pk
    status
    applicantType
    contactPerson {
      id
      pk
      firstName
      lastName
      email
      phoneNumber
    }
    additionalInformation
    organisation {
      id
      pk
      nameFi
      identifier
      organisationType
      coreBusinessFi
      yearEstablished
      address {
        id
        pk
        postCode
        streetAddressFi
        cityFi
      }
    }
    homeCity {
      id
      pk
      nameFi
      nameEn
      nameSv
    }
    billingAddress {
      id
      pk
      postCode
      streetAddressFi
      cityFi
    }
  }
}

query ApplicationSectionView($pk: Int!, $beginDate: Date = null) {
  applicationSections(pk: [$pk]) {
    edges {
      node {
        application {
          id
          pk
          status
          applicationRound {
            id
            nameEn
            nameFi
            nameSv
          }
        }
        id
        pk
        name
        pindoraInfo {
          accessCode
          accessCodeIsActive
          accessCodeValidity {
            accessCodeBeginsAt
            accessCodeEndsAt
            reservationSeriesId
            reservationId
          }
        }
        reservationUnitOptions {
          id
          allocatedTimeSlots {
            id
            dayOfTheWeek
            beginTime
            endTime
            recurringReservation {
              id
              pk
              beginTime
              endTime
              weekdays
              accessType
              usedAccessTypes
              pindoraInfo {
                accessCode
                accessCodeIsActive
                accessCodeValidity {
                  accessCodeBeginsAt
                  accessCodeEndsAt
                  reservationId
                  reservationSeriesId
                }
              }
              reservationUnit {
                reservationConfirmedInstructionsFi
                reservationConfirmedInstructionsEn
                reservationConfirmedInstructionsSv
                unit {
                  id
                  nameFi
                  nameEn
                  nameSv
                }
                nameFi
                nameSv
                nameEn
                id
                pk
                reservationCancelledInstructionsFi
                reservationCancelledInstructionsSv
                reservationCancelledInstructionsEn
                accessTypes {
                  id
                  pk
                  accessType
                  beginDate
                }
                currentAccessType
              }
              rejectedOccurrences {
                id
                beginDatetime
                endDatetime
              }
              reservations(orderBy: [beginAsc], beginDate: $beginDate) {
                id
                pk
                end
                state
                accessType
                accessCodeIsActive
                pindoraInfo {
                  accessCode
                  accessCodeBeginsAt
                  accessCodeEndsAt
                  accessCodeIsActive
                }
                begin
                reservationUnits {
                  id
                  cancellationRule {
                    id
                    canBeCancelledTimeBefore
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

query ApplicationSectionCancel($id: ID!) {
  applicationSection(id: $id) {
    pk
    id
    name
    reservationsBeginDate
    reservationsEndDate
    reservationUnitOptions {
      id
      reservationUnit {
        id
        pk
        nameEn
        nameFi
        nameSv
      }
      allocatedTimeSlots {
        id
        dayOfTheWeek
        beginTime
        endTime
        recurringReservation {
          id
          reservations {
            id
            state
            begin
            reservationUnits {
              id
              cancellationRule {
                id
                canBeCancelledTimeBefore
              }
            }
          }
        }
      }
    }
    application {
      id
      pk
      applicationRound {
        id
        termsOfUse {
          id
          textFi
          textEn
          textSv
        }
      }
    }
  }
  reservationCancelReasons {
    edges {
      node {
        id
        pk
        reasonFi
        reasonEn
        reasonSv
      }
    }
  }
}

mutation CancelApplicationSection($input: ApplicationSectionReservationCancellationMutationInput!) {
  cancelAllApplicationSectionReservations(input: $input) {
    future
    cancelled
  }
}

query CurrentUser {
  currentUser {
    id
    pk
    firstName
    lastName
    email
    isAdAuthenticated
  }
}

query ReservationUnitPage($id: ID!, $pk: Int!, $beginDate: Date!, $endDate: Date!, $state: [ReservationStateChoice]) {
  reservationUnit(id: $id) {
    unit {
      id
      tprekId
      pk
      nameFi
      nameEn
      nameSv
      location {
        addressStreetEn
        addressStreetSv
        addressCityEn
        addressCitySv
        id
        addressStreetFi
        addressZip
        addressCityFi
      }
    }
    id
    pk
    uuid
    nameFi
    nameEn
    nameSv
    pricings {
      id
      begins
      priceUnit
      lowestPrice
      highestPrice
      taxPercentage {
        id
        pk
        value
      }
    }
    images {
      id
      imageUrl
      largeUrl
      mediumUrl
      smallUrl
      imageType
    }
    isDraft
    applicationRoundTimeSlots {
      id
      closed
      weekday
      reservableTimes {
        begin
        end
      }
    }
    applicationRounds(ongoing: true) {
      id
      reservationPeriodBegin
      reservationPeriodEnd
    }
    descriptionFi
    descriptionEn
    descriptionSv
    reservationKind
    bufferTimeBefore
    bufferTimeAfter
    reservationStartInterval
    canApplyFreeOfCharge
    publishingState
    reservationState
    reservationUnitType {
      id
      pk
      nameFi
      nameEn
      nameSv
    }
    numActiveUserReservations
    requireReservationHandling
    equipments {
      id
      pk
      nameFi
      nameEn
      nameSv
      category {
        id
        nameFi
        nameEn
        nameSv
      }
    }
    currentAccessType
    accessTypes(isActiveOrFuture: true, orderBy: [beginDateAsc]) {
      id
      pk
      accessType
      beginDate
    }
    termsOfUseFi
    termsOfUseEn
    termsOfUseSv
    serviceSpecificTerms {
      id
      textFi
      textEn
      textSv
    }
    cancellationTerms {
      id
      textFi
      textEn
      textSv
    }
    paymentTerms {
      id
      textFi
      textEn
      textSv
    }
    pricingTerms {
      id
      nameFi
      nameEn
      nameSv
      textFi
      textEn
      textSv
    }
    minPersons
    maxPersons
    metadataSet {
      id
      requiredFields {
        id
        fieldName
      }
      supportedFields {
        id
        fieldName
      }
    }
    reservationBegins
    reservationEnds
    reservationsMaxDaysBefore
    reservationsMinDaysBefore
    minReservationDuration
    maxReservationDuration
    maxReservationsPerUser
    reservableTimeSpans(startDate: $beginDate, endDate: $endDate) {
      startDatetime
      endDatetime
    }
  }
  affectingReservations(
    forReservationUnits: [$pk]
    beginDate: $beginDate
    endDate: $endDate
    state: $state
  ) {
    pk
    id
    state
    isBlocked
    begin
    end
    numPersons
    calendarUrl
    bufferTimeBefore
    bufferTimeAfter
    affectedReservationUnits
  }
}

query SearchReservationUnits($textSearch: String, $pk: [Int], $applicationRound: [Int], $personsAllowed: Decimal, $unit: [Int], $reservationUnitType: [Int], $purposes: [Int], $equipments: [Int], $accessType: [AccessType], $accessTypeBeginDate: Date, $accessTypeEndDate: Date, $reservableDateStart: Date, $reservableDateEnd: Date, $reservableTimeStart: Time, $reservableTimeEnd: Time, $reservableMinimumDurationMinutes: Decimal, $showOnlyReservable: Boolean, $first: Int, $before: String, $after: String, $orderBy: [ReservationUnitOrderingChoices], $isDraft: Boolean, $isVisible: Boolean, $reservationKind: String) {
  reservationUnits(
    textSearch: $textSearch
    pk: $pk
    applicationRound: $applicationRound
    personsAllowed: $personsAllowed
    unit: $unit
    reservationUnitType: $reservationUnitType
    purposes: $purposes
    equipments: $equipments
    accessType: $accessType
    accessTypeBeginDate: $accessTypeBeginDate
    accessTypeEndDate: $accessTypeEndDate
    reservableDateStart: $reservableDateStart
    reservableDateEnd: $reservableDateEnd
    reservableTimeStart: $reservableTimeStart
    reservableTimeEnd: $reservableTimeEnd
    reservableMinimumDurationMinutes: $reservableMinimumDurationMinutes
    showOnlyReservable: $showOnlyReservable
    first: $first
    after: $after
    before: $before
    orderBy: $orderBy
    isDraft: $isDraft
    isVisible: $isVisible
    reservationKind: $reservationKind
    calculateFirstReservableTime: true
  ) {
    edges {
      node {
        reservationBegins
        reservationEnds
        isClosed
        firstReservableDatetime
        currentAccessType
        pricings {
          id
          begins
          priceUnit
          lowestPrice
          highestPrice
          taxPercentage {
            id
            pk
            value
          }
        }
        unit {
          id
          pk
          nameFi
          nameEn
          nameSv
          location {
            addressStreetEn
            addressStreetSv
            addressCityEn
            addressCitySv
            id
            addressStreetFi
            addressZip
            addressCityFi
          }
        }
        reservationUnitType {
          id
          pk
          nameFi
          nameEn
          nameSv
        }
        images {
          id
          imageUrl
          largeUrl
          mediumUrl
          smallUrl
          imageType
        }
        maxPersons
        effectiveAccessType
        accessTypes(isActiveOrFuture: true, orderBy: [beginDateAsc]) {
          id
          accessType
        }
        id
        pk
        nameFi
        nameEn
        nameSv
      }
    }
    pageInfo {
      endCursor
      hasNextPage
    }
    totalCount
  }
}

query RelatedReservationUnits($unit: [Int]!, $isDraft: Boolean, $isVisible: Boolean) {
  reservationUnits(unit: $unit, isDraft: $isDraft, isVisible: $isVisible) {
    edges {
      node {
        images {
          id
          imageUrl
          largeUrl
          mediumUrl
          smallUrl
          imageType
        }
        unit {
          id
          pk
          nameFi
          nameEn
          nameSv
          location {
            addressStreetEn
            addressStreetSv
            addressCityEn
            addressCitySv
            id
            addressStreetFi
            addressZip
            addressCityFi
          }
        }
        reservationUnitType {
          id
          pk
          nameFi
          nameEn
          nameSv
        }
        maxPersons
        isDraft
        pricings {
          id
          begins
          priceUnit
          lowestPrice
          highestPrice
          taxPercentage {
            id
            pk
            value
          }
        }
        id
        pk
        nameFi
        nameEn
        nameSv
      }
    }
  }
}

mutation CreateReservation($input: ReservationCreateMutationInput!) {
  createReservation(input: $input) {
    pk
  }
}

mutation UpdateReservation($input: ReservationUpdateMutationInput!) {
  updateReservation(input: $input) {
    pk
    state
  }
}

mutation DeleteReservation($input: ReservationDeleteTentativeMutationInput!) {
  deleteTentativeReservation(input: $input) {
    deleted
  }
}

mutation CancelReservation($input: ReservationCancellationMutationInput!) {
  cancelReservation(input: $input) {
    pk
  }
}

mutation ConfirmReservation($input: ReservationConfirmMutationInput!) {
  confirmReservation(input: $input) {
    pk
    state
    order {
      id
      checkoutUrl
    }
  }
}

query ListReservations($beginDate: Date, $endDate: Date, $state: [ReservationStateChoice], $user: [Int], $reservationUnits: [Int], $orderBy: [ReservationOrderingChoices], $reservationType: [ReservationTypeChoice]!) {
  reservations(
    beginDate: $beginDate
    endDate: $endDate
    state: $state
    user: $user
    reservationUnits: $reservationUnits
    orderBy: $orderBy
    reservationType: $reservationType
  ) {
    edges {
      node {
        id
        name
        bufferTimeBefore
        bufferTimeAfter
        paymentOrder {
          id
          checkoutUrl
          expiresInMinutes
          status
        }
        isBlocked
        reservationUnits {
          id
          cancellationRule {
            id
            canBeCancelledTimeBefore
          }
          pk
          nameFi
          nameEn
          nameSv
          images {
            id
            imageUrl
            largeUrl
            mediumUrl
            smallUrl
            imageType
          }
          unit {
            id
            nameFi
            nameEn
            nameSv
          }
          pricings {
            id
            begins
            priceUnit
            lowestPrice
            highestPrice
            taxPercentage {
              id
              pk
              value
            }
          }
          reservationBegins
          reservationEnds
        }
        pk
        taxPercentageValue
        state
        accessType
        pindoraInfo {
          accessCode
        }
        price
        begin
        end
        applyingForFreeOfCharge
      }
    }
  }
}

query ReservationState($id: ID!) {
  reservation(id: $id) {
    id
    pk
    state
  }
}

mutation AdjustReservationTime($input: ReservationAdjustTimeMutationInput!) {
  adjustReservationTime(input: $input) {
    pk
    state
    begin
    end
  }
}

query Order($orderUuid: String!) {
  order(orderUuid: $orderUuid) {
    id
    reservationPk
    status
    paymentType
    receiptUrl
    checkoutUrl
  }
}

mutation RefreshOrder($input: RefreshOrderMutationInput!) {
  refreshOrder(input: $input) {
    orderUuid
    status
  }
}

query AccessCode($id: ID!) {
  reservation(id: $id) {
    id
    pindoraInfo {
      accessCode
      accessCodeBeginsAt
      accessCodeEndsAt
      accessCodeIsActive
    }
  }
}

query SearchFormParamsUnit($publishedReservationUnits: Boolean, $ownReservations: Boolean, $onlyDirectBookable: Boolean, $onlySeasonalBookable: Boolean, $orderBy: [UnitOrderingChoices]) {
  unitsAll(
    publishedReservationUnits: $publishedReservationUnits
    ownReservations: $ownReservations
    onlyDirectBookable: $onlyDirectBookable
    onlySeasonalBookable: $onlySeasonalBookable
    orderBy: $orderBy
  ) {
    id
    pk
    nameFi
    nameEn
    nameSv
  }
}

mutation UpdateApplication($input: ApplicationUpdateMutationInput!) {
  updateApplication(input: $input) {
    pk
  }
}

query Options($reservationUnitTypesOrderBy: [ReservationUnitTypeOrderingChoices], $purposesOrderBy: [PurposeOrderingChoices], $unitsOrderBy: [UnitOrderingChoices], $equipmentsOrderBy: [EquipmentOrderingChoices], $reservationPurposesOrderBy: [ReservationPurposeOrderingChoices]) {
  reservationUnitTypes(orderBy: $reservationUnitTypesOrderBy) {
    edges {
      node {
        id
        pk
        nameFi
        nameEn
        nameSv
      }
    }
  }
  purposes(orderBy: $purposesOrderBy) {
    edges {
      node {
        id
        pk
        nameFi
        nameEn
        nameSv
      }
    }
  }
  reservationPurposes(orderBy: $reservationPurposesOrderBy) {
    edges {
      node {
        id
        pk
        nameFi
        nameEn
        nameSv
      }
    }
  }
  ageGroups {
    edges {
      node {
        id
        pk
        minimum
        maximum
      }
    }
  }
  cities {
    edges {
      node {
        id
        pk
        nameFi
        nameEn
        nameSv
      }
    }
  }
  equipmentsAll(orderBy: $equipmentsOrderBy) {
    id
    pk
    nameFi
    nameEn
    nameSv
  }
  unitsAll(orderBy: $unitsOrderBy) {
    id
    pk
    nameFi
    nameSv
    nameEn
  }
}

mutation CancelApplication($input: ApplicationCancelMutationInput!) {
  cancelApplication(input: $input) {
    pk
  }
}

query ApplicationReservations($id: ID!, $beginDate: Date!) {
  application(id: $id) {
    id
    pk
    applicationSections {
      id
      pk
      name
      pindoraInfo {
        accessCode
        accessCodeIsActive
        accessCodeValidity {
          accessCodeBeginsAt
          accessCodeEndsAt
          reservationSeriesId
          reservationId
        }
      }
      reservationUnitOptions {
        id
        allocatedTimeSlots {
          id
          dayOfTheWeek
          beginTime
          endTime
          recurringReservation {
            id
            pk
            beginTime
            endTime
            weekdays
            accessType
            usedAccessTypes
            pindoraInfo {
              accessCode
              accessCodeIsActive
              accessCodeValidity {
                accessCodeBeginsAt
                accessCodeEndsAt
                reservationId
                reservationSeriesId
              }
            }
            reservationUnit {
              reservationConfirmedInstructionsFi
              reservationConfirmedInstructionsEn
              reservationConfirmedInstructionsSv
              unit {
                id
                nameFi
                nameEn
                nameSv
              }
              nameFi
              nameSv
              nameEn
              id
              pk
              reservationCancelledInstructionsFi
              reservationCancelledInstructionsSv
              reservationCancelledInstructionsEn
              accessTypes {
                id
                pk
                accessType
                beginDate
              }
              currentAccessType
            }
            rejectedOccurrences {
              id
              beginDatetime
              endDatetime
            }
            reservations(orderBy: [beginAsc], beginDate: $beginDate) {
              id
              pk
              end
              state
              accessType
              accessCodeIsActive
              pindoraInfo {
                accessCode
                accessCodeBeginsAt
                accessCodeEndsAt
                accessCodeIsActive
              }
              begin
              reservationUnits {
                id
                cancellationRule {
                  id
                  canBeCancelledTimeBefore
                }
              }
            }
          }
        }
      }
    }
  }
}

query TermsOfUse($termsType: TermsType) {
  termsOfUse(termsType: $termsType) {
    edges {
      node {
        id
        pk
        termsType
        nameFi
        nameEn
        nameSv
        textFi
        textEn
        textSv
      }
    }
  }
}

query BannerNotificationsListAll {
  bannerNotifications(isVisible: true, target: ALL) {
    edges {
      node {
        id
        level
        activeFrom
        message
        messageEn
        messageFi
        messageSv
      }
    }
  }
}

query BannerNotificationsList($target: BannerNotificationTarget!) {
  bannerNotifications(isVisible: true, target: $target) {
    edges {
      node {
        id
        level
        activeFrom
        message
        messageEn
        messageFi
        messageSv
      }
    }
  }
}