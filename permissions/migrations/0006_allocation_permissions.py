# Generated by Django 3.1.7 on 2021-03-19 11:45

from django.db import migrations, models

def update_permissions(apps, schema_editor):
    ServiceSectorRoleChoice = apps.get_model('permissions', 'ServiceSectorRoleChoice')
    GeneralRoleChoice = apps.get_model('permissions', 'GeneralRoleChoice')
    ServiceSectorRolePermission = apps.get_model('permissions', 'ServiceSectorRolePermission')
    GeneralRolePermission = apps.get_model('permissions', 'GeneralRolePermission')


    # General Admin
    general_admin = GeneralRoleChoice.objects.get(
        code="admin",
    )
    GeneralRolePermission.objects.create(
        role=general_admin,
        permission="can_allocate_applications"
    )

    # Service Sector Admin
    service_sector_admin = ServiceSectorRoleChoice.objects.get(code="admin")
    ServiceSectorRolePermission.objects.create(
        role=service_sector_admin,
        permission="can_allocate_applications"
    )

    # Service Sector Application Manager
    service_sector_application_manager = ServiceSectorRoleChoice.objects.get(code="application_manager")
    ServiceSectorRolePermission.objects.create(
        role=service_sector_application_manager,
        permission="can_allocate_applications"
    )

class Migration(migrations.Migration):

    dependencies = [
        ('permissions', '0005_grant_user_view_permission_to_certain_roles'),
    ]

    operations = [
        migrations.AlterField(
            model_name='servicesectorrolepermission',
            name='permission',
            field=models.CharField(choices=[('can_manage_service_sector_roles', 'Can modify roles for the service sector'), ('can_manage_unit_roles', 'Can modify roles for units in the service sector'), ('can_manage_reservation_units', 'Can create, edit and delete reservation units in certain unit'), ('can_manage_application_rounds', 'Can create, edit and delete application rounds in the service sector'), ('can_handle_applications', 'Can handle applications in the service sector'), ('can_manage_reservations', 'Can create, edit and cancel reservations in the service sector'), ('can_view_reservations', 'Can view details of all reservations in the service sector'), ('can_view_users', 'Can view users in the whole system'), ('can_allocate_applications', 'Can allocate applications in the service sector')], max_length=255, verbose_name='Permission'),
        ),
        migrations.AlterField(
            model_name='unitrolepermission',
            name='permission',
            field=models.CharField(choices=[('can_manage_unit_roles', 'Can modify roles for the unit'), ('can_manage_reservation_units', 'Can create, edit and delete reservation units in the unit'), ('can_manage_reservations', 'Can create, edit and cancel reservations in the unit'), ('can_view_reservations', 'Can view details of all reservations in the unit'), ('can_view_users', 'Can view users in the whole system'), ('can_allocate_applications', 'Can allocate applications')], max_length=255, verbose_name='Permission'),
        ),
        migrations.RunPython(update_permissions, migrations.RunPython.noop),
    ]
