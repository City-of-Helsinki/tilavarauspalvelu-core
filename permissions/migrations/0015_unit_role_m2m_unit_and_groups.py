# Generated by Django 3.2.12 on 2022-03-07 10:09

from django.db import migrations, models

units_in_roles = {}
unit_groups_in_roles = {}
def store_data(apps, schema_editor):
    UnitRole = apps.get_model('permissions', 'UnitRole')
    for role in UnitRole.objects.all():
        if role.unit:
            units_in_roles[role.id] = role.unit.id
        if role.unit_group:
            unit_groups_in_roles[role.id] = role.unit_group.id

def restore_stored_data(apps, schema_editor):
    UnitRole = apps.get_model('permissions', 'UnitRole')
    Unit = apps.get_model('spaces', 'Unit')
    UnitGroup = apps.get_model('spaces', 'UnitGroup')
    for role_id, unit_id in units_in_roles.items():
        role = UnitRole.objects.get(id=role_id)
        unit = Unit.objects.get(id=unit_id)
        role.unit.add(unit)

    for role_id, unit_group_id in unit_groups_in_roles.items():
        role = UnitRole.objects.get(id=role_id)
        group = UnitGroup.objects.get(id=unit_group_id)
        role.unit_group.add(group)

class Migration(migrations.Migration):

    dependencies = [
        ('spaces', '0020_remove_terms_of_use'),
        ('permissions', '0014_space_manage_permissions'),
    ]

    operations = [
        migrations.RunPython(store_data, migrations.RunPython.noop),
        migrations.RemoveField(
            model_name='unitrole',
            name='unit',
        ),
        migrations.AddField(
            model_name='unitrole',
            name='unit',
            field=models.ManyToManyField(blank=True, related_name='roles', to='spaces.Unit', verbose_name='Unit'),
        ),
        migrations.RemoveField(
            model_name='unitrole',
            name='unit_group',
        ),
        migrations.AddField(
            model_name='unitrole',
            name='unit_group',
            field=models.ManyToManyField(blank=True, related_name='roles', to='spaces.UnitGroup', verbose_name='Unit group'),
        ),
        migrations.RunPython(restore_stored_data, migrations.RunPython.noop),
    ]
