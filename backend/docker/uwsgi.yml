uwsgi:
  # Basic settings
  strict: true
  need-app: true
  module: config.wsgi:application
  single-interpreter: true
  die-on-term: true
  umask: 022
  http: :8000
  buffer-size: 14000
  log-x-forwarded-for: true

  # Reload workers regularly to keep memory fresh and ease potential memory leaks.
  max-requests: 1000                  # Restart workers after this many requests
  max-worker-lifetime: 3600           # Restart workers after this many seconds
  reload-on-rss: 300                  # Restart workers after this much resident memory
  worker-reload-mercy: 60             # How long to wait before forcefully killing workers

  # Required for Sentry to operate correctly.
  enable-threads: true
  py-call-uwsgi-fork-hooks: true

  # Workload settings
  # Automatically scales up worker count when application is under load.
  master: true
  threads: 1
  cheaper-algo: busyness
  cheaper-overload: 5
  cheaper-busyness-backlog-alert: 20
  cheaper-busyness-backlog-step: 4
  cheaper: $(CORE_UWSGI_MIN_NUM_PROCESSES)
  cheaper-initial: $(CORE_UWSGI_MIN_NUM_PROCESSES)
  processes: $(CORE_UWSGI_MAX_NUM_PROCESSES)
  cheaper-step: $(CORE_UWSGI_PROCESSES_STEP_COUNT)

  # Offload static file serving to separate threads
  # Application logic can then always be handled
  file-serve-mode: offloading
  offload-threads: $(CORE_UWSGI_NUM_OFFLOAD_THREADS)
  static-map: $(MEDIA_URL)=$(MEDIA_ROOT)

  # Ignore logging errors for cases when http pipes are closed
  # before workers has had the time to serve content to the pipe
  ignore-sigpipe: true
  ignore-write-errors: true
  disable-write-exception: true

  # Configure logging to be less verbose
  disable-logging: true
  log-4xx: true
  log-5xx: true
