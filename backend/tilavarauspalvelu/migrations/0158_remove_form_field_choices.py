# Generated by Django 5.1.11 on 2025-07-20 08:49
from __future__ import annotations

from typing import Any
from unittest.mock import patch

from django.db import migrations

import tilavarauspalvelu.enums
import utils.fields.model


def to_python(value) -> Any:
    return value


# Must patch the 'TextChoicesField' so that it doesn't try to convert string from db to an enum.
# This would fail, since the enum values have changed.
@patch("utils.fields.model.TextChoicesField.to_python", side_effect=to_python)
def migrate_enums(apps, schema_editor, _patch):
    ReservationUnit = apps.get_model("tilavarauspalvelu", "ReservationUnit")

    qs = ReservationUnit.objects.all()
    qs.filter(reservation_form="PURPOSE_SUBVENTION_FORM").update(reservation_form="PURPOSE_FORM")
    qs.filter(reservation_form="AGE_GROUP_SUBVENTION_FORM").update(reservation_form="AGE_GROUP_FORM")


class Migration(migrations.Migration):
    dependencies = [
        ("tilavarauspalvelu", "0157_alter_paymentaccounting_balance_profit_center_and_more"),
    ]

    operations = [
        migrations.RunPython(migrate_enums, migrations.RunPython.noop),
        migrations.AlterField(
            model_name="reservationunit",
            name="reservation_form",
            field=utils.fields.model.TextChoicesField(
                choices=[
                    ("CONTACT_INFO_FORM", "Contact info form"),
                    ("RESERVEE_INFO_FORM", "Reservee info form"),
                    ("PURPOSE_FORM", "Purpose form"),
                    ("AGE_GROUP_FORM", "Age group form"),
                ],
                enum=tilavarauspalvelu.enums.ReservationFormType,
                db_index=True,
                default="CONTACT_INFO_FORM",
                max_length=18,  # Max length changed
            ),
        ),
    ]
