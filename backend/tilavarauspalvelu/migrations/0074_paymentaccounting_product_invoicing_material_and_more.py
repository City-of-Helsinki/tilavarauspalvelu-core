# Generated by Django 5.1.6 on 2025-04-14 11:09
from __future__ import annotations

from django.db import migrations, models

import tilavarauspalvelu.validators


class Migration(migrations.Migration):
    dependencies = [
        ("tilavarauspalvelu", "0073_applicationround_application_period_begin_before_end_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="paymentaccounting",
            name="product_invoicing_material",
            field=models.CharField(
                blank=True,
                default="",
                max_length=8,
                validators=[tilavarauspalvelu.validators.is_numeric],
            ),
        ),
        migrations.AddField(
            model_name="paymentaccounting",
            name="product_invoicing_order_type",
            field=models.CharField(blank=True, default="", max_length=4),
        ),
        migrations.AddField(
            model_name="paymentaccounting",
            name="product_invoicing_sales_office",
            field=models.CharField(
                blank=True,
                default="",
                max_length=4,
                validators=[tilavarauspalvelu.validators.is_numeric],
            ),
        ),
        migrations.AddField(
            model_name="paymentaccounting",
            name="product_invoicing_sales_org",
            field=models.CharField(
                blank=True,
                default="",
                max_length=4,
                validators=[tilavarauspalvelu.validators.is_numeric],
            ),
        ),
        migrations.AddConstraint(
            model_name="paymentaccounting",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("product_invoicing_material", ""),
                        ("product_invoicing_order_type", ""),
                        ("product_invoicing_sales_office", ""),
                        ("product_invoicing_sales_org", ""),
                    ),
                    models.Q(
                        models.Q(("product_invoicing_sales_org", ""), _negated=True),
                        models.Q(("product_invoicing_sales_office", ""), _negated=True),
                        models.Q(("product_invoicing_material", ""), _negated=True),
                        models.Q(("product_invoicing_order_type", ""), _negated=True),
                    ),
                    _connector="OR",
                ),
                name="product_invoicing_data_together",
                violation_error_message="Must fill all product invoicing fields or none of them",
            ),
        ),
    ]
