# Generated by Django 5.1.8 on 2025-05-07 05:54
from __future__ import annotations

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("tilavarauspalvelu", "0072_alter_applicationround_reservation_units"),
    ]

    operations = [
        migrations.AddConstraint(
            model_name="applicationround",
            constraint=models.CheckConstraint(
                condition=models.Q(("application_period_begin__lt", models.F("application_period_end"))),
                name="application_period_begin_before_end",
                violation_error_message="Application period must begin before it ends",
            ),
        ),
        migrations.AddConstraint(
            model_name="applicationround",
            constraint=models.CheckConstraint(
                condition=models.Q(("reservation_period_begin__lt", models.F("reservation_period_end"))),
                name="reservation_period_begin_before_end",
                violation_error_message="Reservation period must begin before it ends",
            ),
        ),
        migrations.AddConstraint(
            model_name="applicationround",
            constraint=models.CheckConstraint(
                condition=models.Q(("public_display_begin__lt", models.F("public_display_end"))),
                name="public_display_begin_before_end",
                violation_error_message="Public display period must begin before it ends",
            ),
        ),
        migrations.AddConstraint(
            model_name="applicationround",
            constraint=models.CheckConstraint(
                condition=models.Q(("application_period_end__date__lt", models.F("reservation_period_begin"))),
                name="applications_end_before_reservation_period_begins",
                violation_error_message="Application period must end before reservation period begins",
            ),
        ),
        migrations.AddConstraint(
            model_name="applicationround",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    models.Q(("handled_date__isnull", True), ("sent_date__isnull", True)),
                    models.Q(("handled_date__isnull", False), ("sent_date__isnull", True)),
                    ("handled_date__lte", models.F("sent_date")),
                    _connector="OR",
                ),
                name="must_handle_before_sending",
                violation_error_message="Application round must be handled before it can be sent",
            ),
        ),
        migrations.AddConstraint(
            model_name="applicationround",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("handled_date", None),
                    ("application_period_end__date__lt", models.F("handled_date")),
                    _connector="OR",
                ),
                name="handling_after_application_period_end",
                violation_error_message="Application round can only be handled after its application round has ended",
            ),
        ),
    ]
